name: Build and Deploy Problems

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install platform-specific packages
        run: |
          npm install @rollup/rollup-linux-x64-gnu
          npm i --save-dev @types/node

      - name: Build and Report
        id: build-challenges
        run: |
          mkdir -p dist
          success_problems=()
          failed_problems=()

          for problem in problems/*; do
            if [ -d "$problem" ]; then
              problem_name=$(basename "$problem")
              echo "Building $problem_name"
              
              cd "$problem"

              if npm ci && npm run build; then
                echo "$problem_name build succeeded"
                mkdir -p ../../dist/problems/$problem_name
                cp -r dist/* ../../dist/problems/$problem_name/
                success_problems+=("$problem_name")
              else
                echo "$problem_name build failed"
                failed_problems+=("$problem_name")
              fi
              
              cd ../..
            fi
          done

          echo "success_problems=${success_problems[*]}" >> $GITHUB_ENV
          echo "failed_problems=${failed_problems[*]}" >> $GITHUB_ENV

          echo "Success: ${success_problems[@]}" >> $GITHUB_STEP_SUMMARY
          echo "Failed: ${failed_problems[@]}" >> $GITHUB_STEP_SUMMARY

      - name: Deploy to Vercel
        if: ${{ env.success_problems }}
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./dist
